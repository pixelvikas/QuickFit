import{E as S,p as t,d as g,e as d,M as E,f as i,S as l,a as W,g as v}from"./logger-DD7inj_l.js";import{i as N}from"./install-service-worker-iFhEZwqq.js";const a=()=>{t({type:E.ENVIRONMENT_ERROR,error:{name:"ServiceWorker",message:"Unexpected disconnect"},runId:null})},p=()=>{var e;(e=navigator.serviceWorker.controller)==null||e.postMessage({type:i.INIT})},y=()=>{let e=null;const r=()=>{if(!navigator.serviceWorker.controller){a();return}const n=new MessageChannel,s=setTimeout(()=>{e!=null&&window.clearInterval(e),navigator.serviceWorker.getRegistration().then(o=>{o==null||o.unregister(),a()})},4e3);n.port1.onmessage=o=>{o.data.type===d.PONG&&(clearTimeout(s),o.data.isSessionConnected||p())},navigator.serviceWorker.controller.postMessage({type:i.PING},[n.port2])};return e=window.setInterval(r,5e3),()=>window.clearInterval(e)},I=async(e,r)=>{const n=new MessageChannel;t({type:g.SW_RECONNECT,sessionId:l,clientId:e,reconnectId:r},[n.port1]);const s=W(o=>{var c;o.type===v.SW_RECONNECT_RESPONSE&&o.reconnectId===r&&o.sessionId===l&&((c=navigator.serviceWorker.controller)==null||c.postMessage({...o,type:i.SW_RECONNECT_RESPONSE},[n.port2]),s())})};N({routeName:"relay",onComplete:()=>{if(!S)return t({type:g.SW_NOT_SUPPORTED});const e=y();navigator.serviceWorker.onmessage=r=>{r.data.type===d.SW_RECONNECT&&I(r.data.clientId,r.data.reconnectId)},navigator.serviceWorker.oncontrollerchange=r=>{(!(r.target instanceof ServiceWorkerContainer)||r.target.controller==null)&&(a(),e())},p()},onError:e=>{}});
